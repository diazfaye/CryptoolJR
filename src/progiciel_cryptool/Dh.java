/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package progiciel_cryptool;

import chap2.TestKeyAgreement;
import chap2.Utils;
import java.io.File;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.spec.InvalidKeySpecException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.interfaces.DHPrivateKey;
import javax.crypto.interfaces.DHPublicKey;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author dell
 */
public class Dh extends javax.swing.JFrame {

    private int tailCle;
    private String algo;
    private String txtPublicA;
    private String txtPriveeA;
    private String txtPublicB;
    private String txtPriveeB;

    public Dh(int tailCle, String algo, String txtPublicA, String txtPriveeA, String txtPublicB, String txtPriveeB) {
        this.tailCle = tailCle;
        this.algo = algo;
        this.txtPublicA = txtPublicA;
        this.txtPriveeA = txtPriveeA;
        this.txtPublicB = txtPublicB;
        this.txtPriveeB = txtPriveeB;
    }

    public Dh() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        varTaill = new javax.swing.JComboBox();
        varAlg = new javax.swing.JComboBox();
        btngenKey = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtpub = new javax.swing.JTextField();
        txtpriv = new javax.swing.JTextField();
        btndownload = new javax.swing.JButton();
        btnDestPrivBob = new javax.swing.JButton();
        btndestpubBob = new javax.swing.JButton();
        btnPrivB = new javax.swing.JButton();
        btnechange = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        varTail = new javax.swing.JComboBox();
        varAlgo = new javax.swing.JComboBox();
        btnGenKey = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtPub = new javax.swing.JTextField();
        txtPriv = new javax.swing.JTextField();
        btnDownload = new javax.swing.JButton();
        btnEchange = new javax.swing.JButton();
        btndestPubAlice = new javax.swing.JButton();
        btndestPrivAlice = new javax.swing.JButton();
        btnPrivA = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnAcceuil = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 23, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Bob");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 0, 48, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Taille Clé");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 29, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Algorithme");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 29, -1, -1));

        varTaill.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        varTaill.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "704", "1024", "2024", "2048" }));
        jPanel1.add(varTaill, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 62, -1, -1));

        varAlg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        varAlg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DH" }));
        jPanel1.add(varAlg, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 62, -1, -1));

        btngenKey.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btngenKey.setText("GenPairKey");
        btngenKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngenKeyActionPerformed(evt);
            }
        });
        jPanel1.add(btngenKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 101, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Public");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 240, 45, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Privée");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 280, 45, -1));
        jPanel1.add(txtpub, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 236, 252, -1));
        jPanel1.add(txtpriv, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 276, 252, -1));

        btndownload.setBackground(new java.awt.Color(102, 204, 255));
        btndownload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btndownload.setText("Charger la clé public de Alice ");
        btndownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndownloadActionPerformed(evt);
            }
        });
        jPanel1.add(btndownload, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, -1, -1));

        btnDestPrivBob.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDestPrivBob.setText("Choisir un endroit pour la clé privée");
        btnDestPrivBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestPrivBobActionPerformed(evt);
            }
        });
        jPanel1.add(btnDestPrivBob, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 186, 240, -1));

        btndestpubBob.setText("Choisir un endroit pour la clé public");
        btndestpubBob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndestpubBobActionPerformed(evt);
            }
        });
        jPanel1.add(btndestpubBob, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 143, 240, -1));

        btnPrivB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPrivB.setText("Charger la clé privé de Bob");
        btnPrivB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrivBActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrivB, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 360, -1, -1));

        btnechange.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnechange.setText("EchangeDH");
        btnechange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnechangeActionPerformed(evt);
            }
        });
        jPanel1.add(btnechange, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 400, 120, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 310, 40));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progiciel_cryptool/keys-remov.png"))); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 250, 250));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 350, 480));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alice");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 0, 53, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Taille Clé");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 35, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Algorithme");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 35, -1, -1));

        varTail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        varTail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "704", "1024", "2024", "2048" }));
        jPanel2.add(varTail, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 68, -1, -1));

        varAlgo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        varAlgo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DH" }));
        varAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varAlgoActionPerformed(evt);
            }
        });
        jPanel2.add(varAlgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 68, -1, -1));

        btnGenKey.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnGenKey.setText("GenPairKey");
        btnGenKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenKeyActionPerformed(evt);
            }
        });
        jPanel2.add(btnGenKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 102, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Public");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 234, 45, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Privée");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 271, 45, -1));

        txtPub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPubActionPerformed(evt);
            }
        });
        jPanel2.add(txtPub, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 227, 263, -1));
        jPanel2.add(txtPriv, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 267, 263, -1));

        btnDownload.setBackground(new java.awt.Color(102, 204, 255));
        btnDownload.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDownload.setText("Charger la clé public de Bob ");
        btnDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadActionPerformed(evt);
            }
        });
        jPanel2.add(btnDownload, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, -1, -1));

        btnEchange.setBackground(new java.awt.Color(255, 255, 255));
        btnEchange.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnEchange.setText("EchangeDH");
        btnEchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEchangeActionPerformed(evt);
            }
        });
        jPanel2.add(btnEchange, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 400, 120, -1));

        btndestPubAlice.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btndestPubAlice.setText("Choisir un endroit pour la clé public");
        btndestPubAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndestPubAliceActionPerformed(evt);
            }
        });
        jPanel2.add(btndestPubAlice, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 151, 240, -1));

        btndestPrivAlice.setText("Choisir un endroit pour la clé privée");
        btndestPrivAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndestPrivAliceActionPerformed(evt);
            }
        });
        jPanel2.add(btndestPrivAlice, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 187, 240, -1));

        btnPrivA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPrivA.setText("Charger la clé privé de Alice");
        btnPrivA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrivAActionPerformed(evt);
            }
        });
        jPanel2.add(btnPrivA, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 300, 40));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progiciel_cryptool/keys-remov.png"))); // NOI18N
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 250, 250));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 350, 480));

        jLabel11.setBackground(new java.awt.Color(0, 153, 153));
        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("ECHANGE  DE CLE DIFFIE HELLMAN");
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 450, -1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/progiciel_cryptool/images-rem.png"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 120));
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        btnAcceuil.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAcceuil.setText("Acceuil");
        btnAcceuil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceuilActionPerformed(evt);
            }
        });
        getContentPane().add(btnAcceuil, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, -1, -1));

        jLabel13.setBackground(new java.awt.Color(0, 153, 153));
        jLabel13.setOpaque(true);
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 630));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenKeyActionPerformed
        try {
            TestKeyAgreement testKey = new TestKeyAgreement();
            tailCle = Integer.parseInt(varTail.getSelectedItem().toString());
            algo = varAlgo.getSelectedItem().toString();
            testKey.genkey(tailCle, txtPublicA, txtPriveeA, algo);
            PublicKey pub = testKey.getPub(txtPublicA, algo);
            txtPub.setText(Utils.toHex(pub.getEncoded()));
            //PrivateKey priv = fRSA.getPriv("cleprivee.txt",varAlg);
            PrivateKey priv = testKey.getPriv(txtPriveeA, algo);
            txtPriv.setText(Utils.toHex(priv.getEncoded()));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeySpecException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnGenKeyActionPerformed

    private void btndestPubAliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndestPubAliceActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btndestPubAlice.setText(path + ".txt");
        txtPublicA = selectedFichier.getAbsolutePath() + ".txt";
    }//GEN-LAST:event_btndestPubAliceActionPerformed

    private void btndestPrivAliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndestPrivAliceActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btndestPrivAlice.setText(path + ".txt");
        txtPriveeA = selectedFichier.getAbsolutePath() + ".txt";
    }//GEN-LAST:event_btndestPrivAliceActionPerformed

    private void btndestpubBobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndestpubBobActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btndestpubBob.setText(path + ".txt");
        txtPublicB = selectedFichier.getAbsolutePath() + ".txt";
    }//GEN-LAST:event_btndestpubBobActionPerformed

    private void btnDestPrivBobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestPrivBobActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btnDestPrivBob.setText(path + ".txt");
        txtPriveeB = selectedFichier.getAbsolutePath() + ".txt";
    }//GEN-LAST:event_btnDestPrivBobActionPerformed

    private void varAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varAlgoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_varAlgoActionPerformed

    private void txtPubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPubActionPerformed

    private void btnDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btnDownload.setText(path);
        txtPublicB = selectedFichier.getAbsolutePath();
    }//GEN-LAST:event_btnDownloadActionPerformed

    private void btngenKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngenKeyActionPerformed
        try {
            TestKeyAgreement testKey = new TestKeyAgreement();
            tailCle = Integer.parseInt(varTaill.getSelectedItem().toString());
            algo = varAlg.getSelectedItem().toString();
            testKey.genkey(tailCle, txtPublicB, txtPriveeB, algo);
            PublicKey pub = testKey.getPub(txtPublicB, algo);
            txtpub.setText(Utils.toHex(pub.getEncoded()));
            //PrivateKey priv = fRSA.getPriv("cleprivee.txt",varAlg);
            PrivateKey priv = testKey.getPriv(txtPriveeB, algo);
            txtpriv.setText(Utils.toHex(priv.getEncoded()));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeySpecException ex) {
            Logger.getLogger(Dh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btngenKeyActionPerformed

    private void btndownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndownloadActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btndownload.setText(path);
        txtPublicA = selectedFichier.getAbsolutePath();
    }//GEN-LAST:event_btndownloadActionPerformed

    private void btnEchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEchangeActionPerformed
        try {
            TestKeyAgreement test = new TestKeyAgreement();

            PublicKey pubA = test.getPub(txtPublicA, "DH");
            PublicKey pubB = test.getPub(txtPublicB, "DH");
            PrivateKey privA = test.getPriv(txtPriveeA, "DH");
            PrivateKey privB = test.getPriv(txtPriveeB, "DH");
            System.out.println(pubA);
            byte[] key = test.echangeClee(pubA, pubB, privA, privB, "DH");

            jTextArea2.setText(Utils.toHex(key));
            jTextArea1.setText(Utils.toHex(key));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erreur de chargement de clés ");
        }
    }//GEN-LAST:event_btnEchangeActionPerformed

    private void btnPrivAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrivAActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btnPrivA.setText(path);
        txtPriveeA = selectedFichier.getAbsolutePath();
    }//GEN-LAST:event_btnPrivAActionPerformed

    private void btnPrivBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrivBActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("m2tdsi", "txt");
        chooser.addChoosableFileFilter(filter);
        chooser.setDialogTitle("Choisissez l'endroit à enregistrer votre fichier: ");
        int fileState = chooser.showDialog(null, "OK");
        if (fileState == JFileChooser.APPROVE_OPTION);
        File selectedFichier = chooser.getSelectedFile();
        String path = selectedFichier.getAbsolutePath();
        btnPrivB.setText(path);
        txtPriveeB = selectedFichier.getAbsolutePath();
    }//GEN-LAST:event_btnPrivBActionPerformed

    private void btnechangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnechangeActionPerformed
        try {
            TestKeyAgreement test = new TestKeyAgreement();

            PublicKey pubA = test.getPub(txtPublicA, "DH");
            PublicKey pubB = test.getPub(txtPublicB, "DH");
            PrivateKey privA = test.getPriv(txtPriveeA, "DH");
            PrivateKey privB = test.getPriv(txtPriveeB, "DH");
            System.out.println(pubA);
            byte[] key = test.echangeClee(pubA, pubB, privA, privB, "DH");

            jTextArea2.setText(Utils.toHex(key));
            jTextArea1.setText(Utils.toHex(key));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erreur de chargement de clés ");
        }
    }//GEN-LAST:event_btnechangeActionPerformed

    private void btnAcceuilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceuilActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnAcceuilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceuil;
    private javax.swing.JButton btnDestPrivBob;
    private javax.swing.JButton btnDownload;
    private javax.swing.JButton btnEchange;
    private javax.swing.JButton btnGenKey;
    private javax.swing.JButton btnPrivA;
    private javax.swing.JButton btnPrivB;
    private javax.swing.JButton btndestPrivAlice;
    private javax.swing.JButton btndestPubAlice;
    private javax.swing.JButton btndestpubBob;
    private javax.swing.JButton btndownload;
    private javax.swing.JButton btnechange;
    private javax.swing.JButton btngenKey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField txtPriv;
    private javax.swing.JTextField txtPub;
    private javax.swing.JTextField txtpriv;
    private javax.swing.JTextField txtpub;
    private javax.swing.JComboBox varAlg;
    private javax.swing.JComboBox varAlgo;
    private javax.swing.JComboBox varTail;
    private javax.swing.JComboBox varTaill;
    // End of variables declaration//GEN-END:variables
}
